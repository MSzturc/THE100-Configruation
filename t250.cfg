[include mainsail.cfg]
[include config/boards/btt-kraken/config.cfg]
[include config/fans/part_fan_cpap.cfg]
[include config/fans/hotend_fan.cfg]
[include config/fans/motor_fan_single.cfg]
[include config/fans/electronic_fan.cfg]
[include config/fans/side_blower_fan_dual.cfg]
[include config/sensors/temp_sensor_host.cfg]
[include config/kinematics/corexy.cfg]
[include config/axis/X/awd_configuration.cfg]
[include config/axis/Y/awd_configuration.cfg]
[include config/axis/Z/z_tilt_TR8x8_1.8deg.cfg]
[include config/beds/ender-3/size.cfg]
[include config/beds/ender-3/config.cfg]
[include config/beds/ender-3/mesh-t250.cfg]
[include config/beds/ender-3/z-tilt-leveling-t250.cfg]

[include config/steppers/generic/5160/54v-1.768a-x.cfg]
[include config/steppers/generic/5160/54v-1.768a-x1.cfg]
[include config/steppers/generic/5160/54v-1.768a-y.cfg]
[include config/steppers/generic/5160/54v-1.768a-y1.cfg]

[include config/steppers/generic/5160/54v-0.5a-z.cfg]
[include config/steppers/generic/5160/54v-0.5a-z1.cfg]
[include config/steppers/generic/5160/54v-0.5a-z2.cfg]

[include config/steppers/generic/5160/54v-0.85a-e.cfg]

[include config/endstops/sensorless/5160.cfg]

[include config/extruders/t250.cfg]
[include config/hotends/rapido-uhf.cfg]

[include config/accelerometers/portable_input_shaper.cfg]
[include config/probes/bdsensor.cfg]
[include config/lights/neopixel_light_bar.cfg]

#####################################################################
#      Extruder Settings
#####################################################################

[extruder]
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114

# Workaround: There is an issue where BDSensor is not able to use renamed
# Pins
[BDsensor]
sda_pin = PG1
scl_pin = PE9

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 87.8
shaper_type_y = mzv
shaper_freq_y = 62.8

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
number_of_results_to_keep: 3
keep_raw_csv: False
show_macros_in_webui: True
timeout: 300

[gcode_arcs]
resolution: 1.0

[autotune_tmc stepper_x]
motor: ldo-42sth48-2804ah-custom
tuning_goal: performance
voltage: 54
sense_resistor: 0.022
tbl: 0
toff: 2
#pwm_freq_target: 40e3

[autotune_tmc stepper_x1]
motor: ldo-42sth48-2804ah-custom
tuning_goal: performance
voltage: 54
sense_resistor: 0.022
tbl: 0
toff: 2
#pwm_freq_target: 40e3

[autotune_tmc stepper_y]
motor: ldo-42sth48-2804ah-custom
tuning_goal: performance
voltage: 54
sense_resistor: 0.022
tbl: 0
toff: 2
#pwm_freq_target: 40e3

[autotune_tmc stepper_y1]
motor: ldo-42sth48-2804ah-custom
tuning_goal: performance
voltage: 54
sense_resistor: 0.022
tbl: 0
toff: 2
#pwm_freq_target: 40e3

#####################################################################
#      Macros
#####################################################################

## This just makes Klipper resume immediately after reaching temp. Otherwise it waits for the temperature to stabilize.
[gcode_macro M109]
rename_existing: G109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+2}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

## This just makes Klipper resume immediately after reaching temp. Otherwise it waits for the temperature to stabilize.
[gcode_macro M190]
rename_existing: G190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+2}  ; Wait for bed temp (within 1 degree)
    {% endif %}


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Adaptive Bed Mesh
    {% if params.PRINT_MIN is defined and params.PRINT_MAX is defined %}
      M118 Homing with custom print area
      G32 PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
    {% else %}
      M118 Default homing routine
      G32
    {% endif %}

    PRIME_LINE
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z3.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z4 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X180 Y200 F3600            ; park nozzle at rear
    BED_MESH_CLEAR


[gcode_macro M106]
rename_existing: G106
gcode:
    {% set fan = params.P | default(0) | int %}
    {% set speed = params.S | default(255) | int %}
    {% if fan == 0 %}
        G106 S{speed}
    {% else %}
        SET_FAN_SPEED FAN=Side_Blowers SPEED={speed / 255}
    {% endif %}

[gcode_macro M107]
rename_existing: G107
gcode:
    {% set fan = params.P | default(0) | int %}
	{% if fan == 2 %}
	  SET_FAN_SPEED FAN=Side_Blowers SPEED=0
	{% else %}
	  SET_FAN_SPEED FAN=Side_Blowers SPEED=0  
	  G107
	{% endif %}

[gcode_macro PRIME_LINE]
gcode: 
    {% set SPEED = params.SPEED|default(1500)|int %}
    M117 Prime Line...
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X2.0 Y2.0 Z0.28 F5000.0 ;Move to start position
    G1 X188.0 Y2.0 Z0.28 F{SPEED} E20 ;Draw the first line
    G1 X188.0 Y2.3 Z0.28 F5000.0 ;Move to side a little
    G1 X2.0 Y2.3 Z0.28 F{SPEED} E40 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up

[gcode_macro SET_HOME_CURRENT]
gcode:
    {% set HOME_CURRENT = 1.0 %}
    {% set HOME_ACCEL = 1500 %}

    {% set HOME_TBL = 0 %}
    {% set HOME_TOFF = 3 %}
    {% set HOME_HSTRT = 0 %}
    {% set HOME_HEND = 0 %}
    
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={HOME_CURRENT}
    
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL}

    SET_TMC_FIELD STEPPER=stepper_x FIELD=TBL VALUE={HOME_TBL}
    SET_TMC_FIELD STEPPER=stepper_x1 FIELD=TBL VALUE={HOME_TBL}
    SET_TMC_FIELD STEPPER=stepper_y FIELD=TBL VALUE={HOME_TBL}
    SET_TMC_FIELD STEPPER=stepper_y1 FIELD=TBL VALUE={HOME_TBL}
    
    SET_TMC_FIELD STEPPER=stepper_x FIELD=TOFF VALUE={HOME_TOFF}
    SET_TMC_FIELD STEPPER=stepper_x1 FIELD=TOFF VALUE={HOME_TOFF}
    SET_TMC_FIELD STEPPER=stepper_y FIELD=TOFF VALUE={HOME_TOFF}
    SET_TMC_FIELD STEPPER=stepper_y1 FIELD=TOFF VALUE={HOME_TOFF}

    SET_TMC_FIELD STEPPER=stepper_x FIELD=HSTRT VALUE={HOME_HSTRT}
    SET_TMC_FIELD STEPPER=stepper_x1 FIELD=HSTRT VALUE={HOME_HSTRT}
    SET_TMC_FIELD STEPPER=stepper_y FIELD=HSTRT VALUE={HOME_HSTRT}
    SET_TMC_FIELD STEPPER=stepper_y1 FIELD=HSTRT VALUE={HOME_HSTRT}
    
    SET_TMC_FIELD STEPPER=stepper_x FIELD=HEND VALUE={HOME_HEND}
    SET_TMC_FIELD STEPPER=stepper_x1 FIELD=HEND VALUE={HOME_HEND}
    SET_TMC_FIELD STEPPER=stepper_y FIELD=HEND VALUE={HOME_HEND}
    SET_TMC_FIELD STEPPER=stepper_y1 FIELD=HEND VALUE={HOME_HEND}

[gcode_macro SET_RUN_CURRENT]
gcode:
    {% set RUN_ACCEL = printer.configfile.settings['printer'].max_accel|int %}

    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_X1 = printer.configfile.settings['tmc5160 stepper_x1'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set RUN_CURRENT_Y1 = printer.configfile.settings['tmc5160 stepper_y1'].run_current|float %}
    
    SET_VELOCITY_LIMIT ACCEL={RUN_ACCEL}

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={RUN_CURRENT_X1}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={RUN_CURRENT_Y1}

    AUTOTUNE_TMC STEPPER="stepper_x"
    AUTOTUNE_TMC STEPPER="stepper_x1"
    AUTOTUNE_TMC STEPPER="stepper_y"
    AUTOTUNE_TMC STEPPER="stepper_y1"

[gcode_macro _HOME_X]
gcode:
    SAVE_GCODE_STATE NAME=STATE_HOME_X
    
    # Move the Toolhead 10mm to the right
    SET_KINEMATIC_POSITION X=0
    G91
    G1 X10 F3600

    # Wait 2 seconds so that motor can recover from stall
    G4 P2000

    # Home X
    G28 X

    # Move away
    G91
    G1 X10 F3600
    
    RESTORE_GCODE_STATE NAME=STATE_HOME_X

[gcode_macro _HOME_Y]
gcode:    
    SAVE_GCODE_STATE NAME=STATE_HOME_Y
    SET_KINEMATIC_POSITION Y=10
    G91
    G1 Y-10 F3600

    # Wait 1,5 seconds so that motor can recover from stall
    G4 P2000

    # Home Y
    G28 Y

    # Move away
    G91
    G1 Y-10 F2400
    RESTORE_GCODE_STATE NAME=STATE_HOME_Y

[gcode_macro _HOME_Z]
gcode:
    SAVE_GCODE_STATE NAME=STATE_HOME_Z
    {% if not 'xy' in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}
    
    G90
    G1 X96 Y85 F9000
    G28 Z
    
    G1 Z1 F3600
    RESTORE_GCODE_STATE NAME=STATE_HOME_Z


[gcode_macro G32]
gcode:

    {% set CALIBRATE_ACCEL = 10000 %}
    {% set RUN_ACCEL = printer.configfile.settings['printer'].max_accel|int %}

    BED_MESH_CLEAR

    # Home
    G28
    
    SET_VELOCITY_LIMIT ACCEL={CALIBRATE_ACCEL}
    Z_TILT_ADJUST

    # Adaptive Bed Mesh
    {% if params.PRINT_MIN is defined and params.PRINT_MAX is defined %}
      BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
    {% else %}
      BED_MESH_CALIBRATE
    {% endif %}
    
    SET_VELOCITY_LIMIT ACCEL={RUN_ACCEL}
    
	G90
    G0 Z5 F3600
    G0 X96 Y85 F9000


[homing_override]
axes: xyz
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    # Raise Z by 3mm to prevent scratching the flexplate if z is not homed
    {% if not 'z' in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z=0
    G1 Z3 F1200
    {% endif %}
    
    # If we're homing X or Y set current to home_current
    {% if home_all or 'X' in params or 'Y' in params %}
    SET_HOME_CURRENT
    {% endif %}
    
    {% if home_all or 'X' in params %}
    _HOME_X
    {% endif %}
    
    {% if home_all or 'Y' in params %}
    _HOME_Y
    {% endif %}

    {% if home_all or 'Z' in params %}
    _HOME_Z
    {% endif %}

    # If we're homing X or Y set current back to rur_current
    {% if home_all or 'X' in params or 'Y' in params %}
    SET_RUN_CURRENT
    {% endif %}

    RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE


[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
description:
gcode:
    #run z tilt with z move up and down at first
    BDSENSOR_SET QGL_TILT_PROBE=1 #set this 1 to enable z axis up and down
    BDSENSOR_SET COLLISION_HOMING=0
    _Z_TILT_ADJUST horizontal_move_z=6 retry_tolerance=1
    G28 Z0
    #run z tilt with no z move up and down
    BDSENSOR_SET QGL_TILT_PROBE=0 #set this 0 to disable z axis up and down while probe
    #_Z_TILT_ADJUST horizontal_move_z=1 retry_tolerance=0.04
    _Z_TILT_ADJUST horizontal_move_z=1 retry_tolerance=0.01
    #BDSENSOR_SET COLLISION_HOMING=1 #optional
    G28 Z0
